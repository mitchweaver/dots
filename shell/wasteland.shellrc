#  ______      #  ______       #  ________      #  ______    #
# /_____/\     # /_____/\      # /_______/\     # /_____/\   #
# \:::__\/     # \:::_ \ \     # \::: _  \ \    # \:::_ \ \  #
#  \:\ \  __   #  \:(_) ) )_   #  \::(_)  \ \   #  \:(_) \ \ #
#   \:\ \/_/\  #   \: __ `\ \  #   \:: __  \ \  #   \: ___\/ #
#    \:\_\ \ \ #    \ \ `\ \ \ #    \:.\ \  \ \ #    \ \ \   #
#     \_____\/ #     \_\/ \_\/ #     \__\/\__\/ #     \_\/   #
#                                                            #
# All unsorted junk below. Who knows what's in here.         #
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

# I hate these stupid dirs and every program that creates them.
/bin/rmdir Desktop Downloads Pictures Public \
        Templates Videos Music 2>/dev/null ||:

# search for a font name
fcg() { fc-list | grep -i "$*" ; }

unalias r 2>/dev/null
r() { ranger "$@" ; clear ; }

alias mpv="mpv $MPV_OPTS"

alias hme='htop -u mitch'
alias hroot='htop -u root'

sxiv() {
    # if arguments, view files
    # if no arguments, start in thumbnail mode in folder
    if [ "$1" ] ; then
        command sxiv -a -b -N sxiv -p -q -r -s d "$@"
    else
        command sxiv -a -N sxiv -p -q -r -s d -t . # -b
    fi 2>/dev/null
}
alias s=sxiv

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# wttr.in
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
weather() {
    if [ -f "${WEATHERD_OUTPUT_FILE:-${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}" ] ; then
        read -r loc < "${WEATHERD_OUTPUT_FILE:-${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}"
        if [ "$loc" ] ; then
            curl -Ls https://wttr.in/"$loc"?u0TQ
        fi
    else
        >&2 echo 'Need to set "${WEATHERD_OUTPUT_FILE:-${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}"'
    fi
}

forecast() {
    if [ -f "${WEATHERD_OUTPUT_FILE:-${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}" ] ; then
        read -r loc < "${WEATHERD_OUTPUT_FILE:-${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}"
        if [ "$loc" ] ; then
            curl -Ls https://wttr.in/"$loc"?u | tail -n 33 | head -n 31
        fi
    else
        >&2 echo 'Need to set "${WEATHERD_OUTPUT_FILE:-${XDG_CONFIG_HOME:-${HOME}/.config}/weatherd/location}"'
    fi
}

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# youtube-dl / ffmpeg
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
alias res='ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0'
alias youtube-dl='yt-dlp'
ytdl() {
    youtube-dl --no-playlist "$@"
}

# removes audio from a video clip
removeaudio() {
    [ -f "$1" ] || return 1
    tmp=/tmp/$RANDOM.${1##.*}
    ffmpeg -i "$1" -c copy -an "$tmp" &&
    mv -f "$tmp" "${2:-out.mp4}"
}

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# imagemagick
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
jpg() {
    if [ -f "$1" ] ; then
        jpegoptim -s "$1"
    elif [ -d "${1:-.}" ] ; then
        find "${1:-.}" -type f -iname "*.jp*" -exec jpegoptim -s {} \;
    fi
}

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# mupdf
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
pdf2txt() {
    # this is kinda jank... WIP
    mutool draw -F txt -i -- "$1" 2>/dev/null |
        sed 's/[^[:print:]]//g' | tr -s '[:blank:]'
}

# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
# translate-shell
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
trans() { command trans -no-auto -b "$*" 2>/dev/null ; }
rtrans() { c=$1 ; shift ; command trans -from en -to $c "$*" 2>/dev/null ; }
rde() { rtrans de "$*" ; }
rja() { rtrans ja "$*" ; }

alias ytm='yt -m'

alias sshcfg='v ~/.ssh/config'
alias vimrc='v ~/.vimrc'

mkgif() {
    rm out.gif 2>/dev/null ||:
    convert -delay 100 -loop 0 ./*.jpg out.gif
}

# temp file for scratch pad
pad() {
    mkdir -p /tmp/$$.tmpsh
    trap 'rm -rf /tmp/$$.tmpsh' EXIT INT TERM HUP
    cd /tmp/$$.tmpsh &&
    ${EDITOR:-vi} $$.md &&
    cd - >/dev/null &&
    /bin/rm -rf /tmp/$$.tmpsh 2>/dev/null ||:
}

alias img2pdf='img2pdf *jpg --output combined.pdf'

alias autoclick='while sleep 1 ; do xdotool click 1; done'

btcprice() {
    p=$(curl -Ls https://api.binance.com/api/v1/ticker/24hr | \
    jq -cr '.[] | select(.symbol == "'"BTCUSDT"'") | .lastPrice')
    printf '$%s\n' "${p%%000000}"
}

alias detox='detox -v'

docx2pdf() {
    libreoffice --convert-to pdf "$1" 2>/dev/null
}


##### fix this later
# pinebook pro brightness, max=4096
alias lowbr='echo 1150 | sudo tee /sys/class/backlight/*/brightness'
alias medbr='echo 2100 | sudo tee /sys/class/backlight/*/brightness'
alias highbr='echo 3600 | sudo tee /sys/class/backlight/*/brightness'


alias subsgu='subs -g ; subs -u'

alias mouse='ratbagctl cheering-viscacha dpi set 400 ; xset m 0 0'

amdproporfree() {
    case $(glxinfo | grep "OpenGL vendor string" | cut -f2 -d":" | xargs) in
        AMD)
            echo free
            ;;
        Advanced*)
            echo nonfree
    esac
}

alias wayland_or_x11='loginctl show-session "$XDG_SESSION_ID" -p Type'

fixpulseaudio() {
    pkill -9 pulseaudio
    systemctl enable --user pulseaudio
    systemctl start --user pulseaudio || \
    systemctl restart --user pulseaudio
}

mousexy() { 
    while sleep 0.5; do clear ;xinput --query-state 9 | grep -E 'valuator(\[0\]|\[1\])'; done
}

backup-firefox() {
    dir="firefox-backup-$(date +'%Y%m%d_%H%M%S')"
    mkdir -p "$dir"
    cp -r ~/.mozilla "$dir"/
    tar -cvJpf "$dir".tar.xz "$dir" && rm -r "$dir"
}

alias htpo=htop

cuesplit() {
    case $1 in
        *h|*help)
            >&2 echo 'usage: cuesplit file.cue file.flac'
            break
            ;;
        *.cue)
            ;;
        *)
            break
    esac
    case $2 in
        *.flac|*.wav)
            ;;
        *)
            break
    esac
    shnsplit -f "$1" -o "flac flac -s -8 -o %f -" "$2" &&
    mv -v "$2" /tmp/ &&
    cuetag.sh "$1" *.flac
}

alias progress='progress -w -M'
alias gputemp="nvidia-smi  -q | grep 'GPU Current Temp' | trim"

pvmv() {
    if [ $# -eq 2 ] ; then
        case $2 in
            */)
                _file="$2/$1"
                ;;
            *)
                _file="$2"
        esac
        : > "$_file" || return 1
    else
        return 1
    fi
    pv < "$1" > "$_file" && rm -f -- "$1"
}
pvcp() {
    if [ $# -eq 2 ] ; then
        case $2 in
            */)
                _file="$2/$1"
                ;;
            *)
                _file="$2"
        esac
        : > "$_file" || return 1
    else
        return 1
    fi
    pv < "$1" > "$_file"
}

alias fjl='firejail --list'
alias pbrestart='polybar-msg cmd restart'

alias governor='cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor'
