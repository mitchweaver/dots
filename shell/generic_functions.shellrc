# ▞▀▖            ▗     ▛▀▘        ▐  ▗          
# ▌▄▖▞▀▖▛▀▖▞▀▖▙▀▖▄ ▞▀▖ ▙▄▌ ▌▛▀▖▞▀▖▜▀ ▄ ▞▀▖▛▀▖▞▀▘
# ▌ ▌▛▀ ▌ ▌▛▀ ▌  ▐ ▌ ▖ ▌ ▌ ▌▌ ▌▌ ▖▐ ▖▐ ▌ ▌▌ ▌▝▀▖
# ▝▀ ▝▀▘▘ ▘▝▀▘▘  ▀▘▝▀  ▘ ▝▀▘▘ ▘▝▀  ▀ ▀▘▝▀ ▘ ▘▀▀ 
#
# Functions that work on any machine with a unix userland.
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

# dynamic "c" utility
c() { 
    if [ -z "$1" ] ; then
        clear
    elif [ -d "$1" ] ; then
        cd "$1"
    else
        cat "$1" || cd "$1"
    fi
}

mkcd() {
    mkdir -p "$1" && cd "$1"
}
mvcd() {
    mkdir -p "$2"
    mv -iv  "$1" "$2" && cd "$2"
}
cpcd() {
    mkdir -p "$2"
    cp -ivr "$1" "$2" && cd "$2"
}

# hack - print directories with full path name
lsd() { printf '%s\n' "$*"/*/ ; }

# squelch output of command
silent() { eval "$* >/dev/null 2>&1" ; }

# output if command was succesful
iif() { "$@" >/dev/null && echo yes || echo no ; }

cw() { cat "$(which "${1:-?}")" ; }
vw() { $EDITOR "$(which "${1:-?}")" ; }

# sum numbers in a file, with the digits one per line
sum() { [ -f "$1" ] && paste -sd+ <"$1" | bc ; }

# search for running process
psgrep() {
    ps -auxww | grep -i -- "$*" | grep -iv -- "grep $*"
}
alias psg=psgrep

# moves a file, making dir if needed
mkmv() {
    usage() {
        >&2 echo 'Usage: mkvmv [file] [directory]'
        return 1
    }
    case $1 in
        -h)
            usage
            ;;
        *)
            case $# in
                2)
                    mkdir -p -- "$2"
                    mv -iv -- "$1" "$2"/
                    ;;
                *)
                    usage
            esac
    esac
}

# foo/bar.mp4 ---> foo/foo.mp4
rename_as_parent_dir() {
    file=${1##*/}
    dir=${1%/$file}
    mv -f "$1" "$dir/$dir"
}

#randint() {
#    LC_ALL=C \
#    tr -dc -- 0-9 < /dev/urandom | \
#    dd ibs=1 obs=1 count=1 2>/dev/null
#    echo
#}

# appends text onto a filename
append() {
    if [ -f "$1" ] && [ "$2" ] ; then
        mv "$1" "$1$2"
    else
        echo "Usage: append [filename] [text]"
        return 1
    fi
}

# converts piped text to image
text2image() {
    convert label:@- out.png
}

load() {
    if [ -e /proc/loadavg ] ; then
        read -r _load < /proc/loadavg
        set -- $_load
        printf '%s %s %s\n' "$1" "$2" "$3"
    fi
}

# stop typing cc idiot
cc() {
    if ls | grep '\.c' >/dev/null ; then
        command cc "$@"
    else
        clear
    fi
}

