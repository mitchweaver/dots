# =================================================
# DISABLE VSYNC
# =================================================
output * adaptive_sync off

# =================================================
# STARTUP APPS
# =================================================
exec dbus-update-activation-environment --all
exec gnome-keyring-daemon --start --components=secrets
exec mako

# =================================================
# INPUT / OUTPUT
# =================================================
input type:keyboard {
    xkb_layout "us"
    # note: default=300/30
    repeat_delay 230
    repeat_rate 33
}
input type:touchpad {
    tap enabled
    natural_scroll enabled
}

output * {
    scale 2
}

# =================================================
# VARS
# =================================================
# note: mod1 = alt, mod4 = super
# NOTE NOTE: M1 Mac / Asahi for some reason these are switched
#            in however sway reads them. Only happens with sway not sure why.
###set $mod Mod1
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
# set $term stwrapper
set $term asahi-kitty

# =================================================
# GAPS / THEMES / RICE
# =================================================
gaps inner 15
gaps outer 15
smart_gaps inverse_outer
hide_edge_borders --i3 both
smart_borders on

default_border pixel 2
default_floating_border none

include "$HOME/.cache/wal/colors-sway"

output * bg /home/mitch/.local/wallpaper fill
client.focused $color0 $background $foreground $color7 $background

# note: this only applies to non-xwayland windows
#       need to find way to set it in xwayland too so is consistent
####seat seat0 xcursor_theme Windows10Light 32

# =================================================
# Monitor Configuration
# =================================================
# Example: output HDMI-A-1 resolution 1920x1080 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

# =================================================
# Idle Configuration
# =================================================
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# =================================================
# Input configuration
# =================================================
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# =================================================
# Key binds
# =================================================
bindsym $mod+Return exec $term
bindsym $mod+w exec MOZ_ENABLE_WAYLAND=1 librewolf
bindsym $mod+e exec pcmanfm
bindsym $mod+r exec asahi-kitty --single-instance ranger

bindsym $mod+p exec menu run --wide run -p 'Run:' | xargs swaymsg exec --
bindsym $mod+o exec dedit

bindsym $mod+q kill

floating_modifier $mod normal

# =================================================
# Exiting / Reloading
# =================================================
bindsym $mod+Shift+c reload
bindsym $mod+Control+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# =================================================
# Window Focus
# =================================================
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# =================================================
# Window Moving
# =================================================
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# =================================================
# Switch to workspace
# =================================================
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+Backspace workspace number 10
# =================================================
# Move to workspace
# =================================================
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
bindsym $mod+Shift+Backspace move container to workspace number 10

# =================================================
# Layouts
# =================================================
bindsym $mod+t layout toggle split
bindsym $mod+f floating toggle

bindsym $mod+b splith
bindsym $mod+v splitv

# bindsym $mod+s layout stacking
# bindsym $mod+t layout tabbed
################### bindsym $mod+f fullscreen
# bindsym $mod+space focus mode_toggle
# bindsym $mod+a focus parent

# =================================================
# Scratchpad
# =================================================
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# =================================================
# WORKSPACE ASSIGNMENTS
# =================================================
assign [class="firefox"] -> 1
assign [class="librewolf"] -> 1

assign [class="discord"] -> 10
assign [class="Discord"] -> 10
assign [class="armcord"] -> 10
assign [class="Armcord"] -> 10
assign [class="ArmCord"] -> 10
assign [class="mailspring"] -> 9
assign [class="Mailspring"] -> 9
assign [class="joplin"] -> 8
assign [class="Joplin"] -> 8
assign [class="spotify"] -> 7
assign [class="Spotify"] -> 7
assign [class="deezer"] -> 7
assign [class="Deezer"] -> 7


# =================================================
# Resizing
# =================================================
# mode "resize" {
#     # left will shrink the containers width
#     # right will grow the containers width
#     # up will shrink the containers height
#     # down will grow the containers height
#     bindsym $left resize shrink width 10px
#     bindsym $down resize grow height 10px
#     bindsym $up resize shrink height 10px
#     bindsym $right resize grow width 10px

#     # Ditto, with arrow keys
#     bindsym Left resize shrink width 10px
#     bindsym Down resize grow height 10px
#     bindsym Up resize shrink height 10px
#     bindsym Right resize grow width 10px

#     # Return to default mode
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+r mode "resize"

# =================================================
# Bar
# Read `man 5 sway-bar` for more information about this section.
# =================================================
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline $color1
        background $color0
        separator #FFFFFF
        # border / border / text
        active_workspace $color5 $color5 $color8
        inactive_workspace $color3 $color3 $color8
        focused_workspace $color1 $color1 $color8
        urgent_workspace #FF0000 #FF0000 #FFFFFF

    }
}

include @sysconfdir@/sway/config.d/*
