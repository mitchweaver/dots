#!/bin/sh

get_battery() {
    case $OS in
        OpenBSD)
            p=$(apm -l)
            s=$(apm -a)
            ;;
        Linux)
            # if this dir is empty, we have neither a battery nor AC adapter
            # probably using a desktop...
            if [ ! "$(ls /sys/class/power_supply)" ] ; then
                return
            fi

            # try to automagically find battery path
            for i in 0 1 2 ; do
                if [ -e /sys/class/power_supply/BAT$i/capacity ] ; then
                    battery_path=/sys/class/power_supply/BAT$i/capacity
                    break
                fi
            done
            if [ ! "$battery_path" ] ; then
                for i in /sys/class/power_supply/*-battery ; do
                    if [ -e "$i" ] ; then
                        battery_path=$i
                        break
                    fi
                done
            fi

            # try to automagically find AC path
            for i in '' 0 1 2 ; do
                if [ -e /sys/class/power_supply/AC$i ] ; then
                    ac_path=/sys/class/power_supply/AC$i
                    break
                fi
            done
            if [ ! "$ac_path" ] ; then
                for i in /sys/class/power_supply/*-charger ; do
                    if [ -e "$i" ] ; then
                        ac_path=$i
                        break
                    fi
                done
            fi

            if [ ! "$ac_path" ] || [ ! "$battery_path" ] ; then
                >&2 echo 'CANNOT GET BATTERY OR AC! Specify in config manually...'
                return
            fi

            read -r p <"$battery_path"
            read -r s <"$ac_path"/online
    esac

    if [ ! "$p" ] || [ ! "$s" ] ; then
        >&2 echo 'Cannot find percent or AC status for battery?'
        return
    fi

    case $s in
        1)
            e=''
            ;;
        0)
            case ${p%?} in
                [8-9]|10)
                    e=' '
                    ;;
                [6-7])
                    e=' '
                    ;;
                [3-5])
                    e=' '
                    ;;
                [1-2])
                    e=' '
                    ;;
                *)
                    e=' '
            esac
    esac

    printf "%s %s%%" "$e" "$p"
}
